# basic church defns
0 := fn f => fn a => a;
succ := fn n => fn f => fn a => f (n f a);
1 := succ 0;

# booleans
true := fn t => fn e => t;
false := fn t => fn e => e;

# pairs
pair := fn l => fn r => fn s => s l r;
first := fn p => p true;
second := fn p => p false;

# add
add := fn n => fn m => n succ m;

# our fib sequence is 0-indexed and starts from 0
fibStep := fn p => pair (add (first p) (second p)) (first p);
fibbit := fn n => second (n fibStep (pair 1 0));

# numbers for testing
2 := succ 1;
3 := succ 2;
4 := succ 3;
5 := succ 4;

# main
fibbit (add 5 5)
